{"version":3,"sources":["constants/index.js","redux/constants.js","redux/guide.js","redux/reducers.js","components/style-guide/Typeface/Typeface.jsx","components/style-guide/Palette.jsx","components/style-guide/Elements.jsx","components/style-guide/Result/resultConstants.js","components/style-guide/Result/ResultStyles.js","components/style-guide/Result/ElementSelected.jsx","components/style-guide/Result/ResultBottom.jsx","components/style-guide/Result/Result.jsx","Routing.jsx","components/pages/menu.jsx","components/pages/header.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["CONSTANTS","BASE_URL","RESULT_URL","API_REQUESTS","Object","freeze","FONTS","STYLE_GUIDE","SAVE","READONLY","Types","SET_NAME","SET_COLORS","SET_TYPOGRAPHY","SET_COMPONENTS","GET_FONTLIST","GET_ID","UPDATE_STATE","IS_SAVING","initialState","id","name","colors","first","hex","rgba","r","g","b","a","second","third","fourth","fontList","typography","elements","isSaving","saving","type","getFonts","url","dispatch","fetch","then","res","json","items","catch","err","console","log","saveGuide","payload","method","mode","body","JSON","stringify","headers","Accept","Content-Type","getGuideFromDB","reducers","combineReducers","guide","state","arguments","length","undefined","action","objectSpread","_action$payload","Title","Typography","Option","Select","Typeface","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFontListSelect","value","checkSelectLimit","setState","selected","errorMessage","blockSubmit","validation","showErrorMessage","saveTypography","setTypography","message","success","react_default","createElement","divider","row","gutter","col","span","icon","style","fontSize","spin","es_select","width","placeholder","defaultValue","maxTagCount","onChange","map","font","key","family","es_button","onClick","disabled","es_alert","marginTop","showIcon","Component","TypeFaceContainer","connect","ColorCard","styled","div","_templateObject","height","color","ColorDisplay","p","_templateObject2","ColorComponent","index","setColors","Fragment","popover","placement","content","lib","handlerColor","trigger","colorSelected","defineProperty","rgb","PaletteContainer","Palette_Title","level","Palette_ColorComponent","ElementsContainer","setComponents","Elements_Title","es_checkbox","Group","checkedValues","WARNINGS","INPUT_NAME","NO_FONT","SECTIONS","TYPOGRAPHY","COLORS","ELEMENTS","GlobalStyles","createGlobalStyle","ResultStyles_templateObject","primaryFont","secondaryFont","primaryColor","secondaryColor","ResultTitle","ResultStyles_templateObject2","FontSample","h1","_templateObject3","_templateObject4","background","BottomBar","_templateObject5","Text","TabPane","Tabs","ElementSelected","_ref","element","ElementSelected_Title","card","title","tag","closable","onClose","tabs","defaultActiveKey","tab","display","input","margin","es_radio","es_switch","defaultChecked","empty","description","ResultBottom","_props$payload","save","loading","ResultContainer","setName","match","useEffect","params","className","e","target","Result_Title","entries","ResultStyles_ColorCard","concat","marginBottom","ElementSelected_ElementSelected","Result_ResultBottom","Routing","react_router","exact","path","component","SubMenu","Menu","GuideMenu","menu","defaultSelectedKeys","defaultOpenKeys","Item","react_router_dom","to","GuideHeader","page_header","subTitle","border","Content","Layout","Sider","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","es","data-test","layout","padding","header","pages_menu","minHeight","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eccca0af.chunk.js","sourcesContent":["const BASE_URL = 'https://styleguide.michael.eti.br/';\r\nconst RESULT_URL = 'https://styleguide.michael.eti.br/result/';\r\n\r\nconst API_REQUESTS = Object.freeze({\r\n  FONTS:\r\n    'https://www.googleapis.com/webfonts/v1/webfonts?key=AIzaSyDZ1o9r_dT7z-65fz34Nc0AVRHONFKH6_w',\r\n  STYLE_GUIDE: {\r\n    SAVE: 'https://style-guide-backend.herokuapp.com/guide/save/',\r\n    READONLY: 'https://style-guide-backend.herokuapp.com/guide/',\r\n  },\r\n});\r\n\r\nconst CONSTANTS = {\r\n  BASE_URL,\r\n  RESULT_URL,\r\n  API_REQUESTS,\r\n};\r\n\r\nexport default CONSTANTS;\r\n","const Types = Object.freeze({\r\n  SET_NAME: 'SET_NAME',\r\n  SET_COLORS: 'SET_COLORS',\r\n  SET_TYPOGRAPHY: 'SET_TYPOGRAPHY',\r\n  SET_COMPONENTS: 'SET_COMPONENTS',\r\n  GET_FONTLIST: 'GET_FONTLIST',\r\n  GET_ID: 'GET_ID',\r\n  UPDATE_STATE: 'UPDATE_STATE',\r\n  IS_SAVING: 'IS_SAVING',\r\n});\r\n\r\nexport default Types;\r\n","import CONSTANTS from '../constants';\r\n// Action Types\r\nimport Types from './constants';\r\n\r\nconst { API_REQUESTS } = CONSTANTS;\r\n\r\n// Reducer\r\nexport const initialState = {\r\n  id: '',\r\n  name: '',\r\n  colors: {\r\n    first: { hex: '#1A535C', rgba: { r: '26', g: '83', b: '92', a: '100' } },\r\n    second: { hex: '#4ECDC4', rgba: { r: '78', g: '205', b: '196', a: '100' } },\r\n    third: { hex: '#F7FFF7', rgba: { r: '247', g: '255', b: '247', a: '100' } },\r\n    fourth: {\r\n      hex: '#FF6B6B',\r\n      rgba: { r: '255', g: '107', b: '107', a: '100' },\r\n    },\r\n  },\r\n  fontList: [],\r\n  typography: [],\r\n  elements: ['Button', 'Form'],\r\n  isSaving: false,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case Types.SET_COLORS:\r\n      return {\r\n        ...state,\r\n        colors: action.colors,\r\n      };\r\n    case Types.GET_FONTLIST:\r\n      return {\r\n        ...state,\r\n        fontList: action.fontList,\r\n      };\r\n    case Types.SET_TYPOGRAPHY:\r\n      return {\r\n        ...state,\r\n        typography: action.typography,\r\n      };\r\n    case Types.SET_COMPONENTS:\r\n      return {\r\n        ...state,\r\n        elements: action.elements,\r\n      };\r\n    case Types.SET_NAME: {\r\n      return {\r\n        ...state,\r\n        name: action.name,\r\n      };\r\n    }\r\n    case Types.GET_ID:\r\n      return {\r\n        ...state,\r\n        id: action.id,\r\n      };\r\n    case Types.UPDATE_STATE:\r\n      const { name, colors, typography, elements } = action.payload;\r\n      return {\r\n        ...state,\r\n        name,\r\n        colors,\r\n        typography,\r\n        elements,\r\n      };\r\n    case Types.IS_SAVING:\r\n      return {\r\n        ...state,\r\n        isSaving: action.saving,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Action Creators\r\n\r\nexport const setColors = colors => {\r\n  return {\r\n    type: Types.SET_COLORS,\r\n    colors,\r\n  };\r\n};\r\n\r\nexport const fontList = fontList => {\r\n  return {\r\n    type: Types.GET_FONTLIST,\r\n    fontList,\r\n  };\r\n};\r\n\r\nexport const setTypography = typography => {\r\n  return {\r\n    type: Types.SET_TYPOGRAPHY,\r\n    typography,\r\n  };\r\n};\r\n\r\nexport const setComponents = elements => {\r\n  return {\r\n    type: Types.SET_COMPONENTS,\r\n    elements,\r\n  };\r\n};\r\n\r\nexport const setId = id => {\r\n  return {\r\n    type: Types.GET_ID,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const setName = name => {\r\n  return {\r\n    type: Types.SET_NAME,\r\n    name,\r\n  };\r\n};\r\n\r\nexport const updateState = payload => {\r\n  return {\r\n    type: Types.UPDATE_STATE,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const isSaving = saving => {\r\n  return {\r\n    type: Types.IS_SAVING,\r\n    saving,\r\n  };\r\n};\r\n\r\n// Middleware\r\nexport const getFonts = url => {\r\n  return dispatch => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(res => dispatch(fontList(res.items)))\r\n      .catch(err => {\r\n        console.log('Error Reading data ' + err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const saveGuide = payload => {\r\n  return dispatch => {\r\n    dispatch(isSaving(true));\r\n\r\n    fetch(API_REQUESTS.STYLE_GUIDE.SAVE, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      body: JSON.stringify(payload),\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        dispatch(setId(res));\r\n        dispatch(isSaving(false));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getGuideFromDB = id => {\r\n  return dispatch => {\r\n    fetch(API_REQUESTS.STYLE_GUIDE.READONLY + id)\r\n      .then(res => res.json())\r\n      .then(res => dispatch(updateState(res)))\r\n      .catch(err => {\r\n        console.log('Error Reading data ' + err);\r\n      });\r\n  };\r\n};\r\n","import guide from './guide';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst reducers = combineReducers({\r\n  guide,\r\n});\r\n\r\nexport default reducers;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CONSTANTS from '../../../constants';\r\n\r\nimport {\r\n  Typography,\r\n  Select,\r\n  Divider,\r\n  Icon,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  Button,\r\n  message,\r\n} from 'antd';\r\n\r\nimport { getFonts, setTypography } from '../../../redux/guide';\r\n\r\nconst { Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nclass Typeface extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fontList: [],\r\n      typography: [],\r\n      showErrorMessage: false,\r\n      blockSubmit: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getFonts(CONSTANTS.API_REQUESTS.FONTS);\r\n  }\r\n\r\n  handleFontListSelect = value => {\r\n    this.checkSelectLimit(value.length);\r\n    this.setState({\r\n      typography: value,\r\n    });\r\n  };\r\n\r\n  checkSelectLimit = selected => {\r\n    if (selected > 2) {\r\n      this.errorMessage(true);\r\n      this.blockSubmit(true);\r\n    } else if (selected === 1 || selected === 2) {\r\n      this.errorMessage(false);\r\n      this.blockSubmit(false);\r\n    }\r\n  };\r\n\r\n  errorMessage = validation => {\r\n    this.setState({ showErrorMessage: validation });\r\n  };\r\n\r\n  blockSubmit = validation => {\r\n    this.setState({ blockSubmit: validation });\r\n  };\r\n\r\n  saveTypography = () => {\r\n    this.props.setTypography(this.state.typography);\r\n    message.success('You Font Family is saved!');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Title>Typeface</Title>\r\n        <Divider />\r\n        <p>\r\n          Select all the Font family used in your project in order of priority.\r\n        </p>\r\n        <Row gutter={16}>\r\n          <Col span={20}>\r\n            {this.props.fontList.length === 0 ? (\r\n              <Icon type=\"loading\" style={{ fontSize: 24 }} spin />\r\n            ) : (\r\n              <Select\r\n                mode=\"multiple\"\r\n                style={{ width: '100%' }}\r\n                placeholder=\"Please select\"\r\n                defaultValue={this.props.typography}\r\n                maxTagCount={5}\r\n                onChange={this.handleFontListSelect}\r\n              >\r\n                {this.props.fontList.map(font => (\r\n                  <Option key={font.family} value={font.family}>\r\n                    {font.family}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            )}\r\n          </Col>\r\n          <Col span={4}>\r\n            <Button\r\n              onClick={this.saveTypography}\r\n              type=\"primary\"\r\n              disabled={this.state.blockSubmit ? true : false}\r\n            >\r\n              Salvar\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        {this.state.showErrorMessage ? (\r\n          <Alert\r\n            style={{ marginTop: '20px' }}\r\n            message=\"The maximum accepted is two Font Family.\"\r\n            type=\"error\"\r\n            showIcon\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTypeface.propTypes = {\r\n  fontList: PropTypes.arrayOf(PropTypes.object),\r\n  typography: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    fontList: state.guide.fontList,\r\n    typography: state.guide.typography,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = dispatch => {\r\n  return {\r\n    getFonts: url => {\r\n      dispatch(getFonts(url));\r\n    },\r\n    setTypography: typography => {\r\n      dispatch(setTypography(typography));\r\n    },\r\n  };\r\n};\r\n\r\nconst TypeFaceContainer = connect(mapStateToProps, mapDispathToProps)(Typeface);\r\n\r\nexport default TypeFaceContainer;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SketchPicker } from 'react-color';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { setColors } from '../../redux/guide';\r\n\r\nimport { Typography, Divider, Popover } from 'antd';\r\nconst { Title } = Typography;\r\n\r\nconst ColorCard = styled.div`\r\n  height: ${props => props.height || '50px'};\r\n  background: ${props => props.color || '#eeeeee'};\r\n`;\r\n\r\nconst ColorDisplay = styled.p`\r\n  display: block;\r\n  margin: 0;\r\n  padding: 10px 10px 0 0;\r\n  color: #ffffff;\r\n  font-size: 22px;\r\n  text-align: right;\r\n`;\r\n\r\nconst ColorComponent = props => {\r\n  const index = props.index;\r\n  const height = props.height;\r\n  const setColors = props.setColors;\r\n\r\n  return (\r\n    <>\r\n      <Popover\r\n        placement=\"left\"\r\n        content={\r\n          <SketchPicker\r\n            color={props.colors[index].rgba}\r\n            onChange={color => {\r\n              handlerColor(color, props.colors, index, setColors);\r\n            }}\r\n          />\r\n        }\r\n        trigger=\"hover\"\r\n      >\r\n        <ColorCard height={height} color={props.colors[index].hex}>\r\n          <ColorDisplay>{props.colors[index].hex}</ColorDisplay>\r\n        </ColorCard>\r\n      </Popover>\r\n    </>\r\n  );\r\n};\r\n\r\nconst handlerColor = (colorSelected, colors, index, setColors) => {\r\n  setColors({\r\n    ...colors,\r\n    [index]: { hex: colorSelected.hex, rgba: colorSelected.rgb },\r\n  });\r\n};\r\n\r\nconst Palette = props => {\r\n  return (\r\n    <div>\r\n      <Title>Color Palette</Title>\r\n      <Divider />\r\n      <Title level={4}></Title>\r\n      <ColorComponent\r\n        colors={props.colors}\r\n        index=\"first\"\r\n        height=\"120px\"\r\n        setColors={props.setColors}\r\n      />\r\n      <ColorComponent\r\n        colors={props.colors}\r\n        index=\"second\"\r\n        height=\"100px\"\r\n        setColors={props.setColors}\r\n      />\r\n      <ColorComponent\r\n        colors={props.colors}\r\n        index=\"third\"\r\n        setColors={props.setColors}\r\n      />\r\n      <ColorComponent\r\n        colors={props.colors}\r\n        index=\"fourth\"\r\n        setColors={props.setColors}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nPalette.propTypes = {\r\n  colors: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    colors: state.guide.colors,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setColors: colors => {\r\n      dispatch(setColors(colors));\r\n    },\r\n  };\r\n};\r\n\r\nconst PaletteContainer = connect(mapStateToProps, mapDispatchToProps)(Palette);\r\n\r\nexport default PaletteContainer;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { setComponents } from '../../redux/guide';\r\n\r\nimport { Typography, Divider, Row, Col, Checkbox } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Elements = props => {\r\n  const handlerCheck = checkedValues => {\r\n    props.setComponents(checkedValues);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Title>Components</Title>\r\n      <Divider />\r\n      <p>Select all elements that you want to see in the final style guide.</p>\r\n      <Checkbox.Group\r\n        defaultValue={props.elements}\r\n        style={{ width: '100%' }}\r\n        onChange={handlerCheck}\r\n      >\r\n        <Row gutter={16}>\r\n          <Col span={8}>\r\n            <Checkbox value=\"Card\">Card</Checkbox>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Checkbox value=\"Button\">Button</Checkbox>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Checkbox value=\"Form\">Form</Checkbox>\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={16} style={{ marginTop: '20px' }}>\r\n          <Col span={8}>\r\n            <Checkbox value=\"Tabs\">Tabs</Checkbox>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Checkbox value=\"Tag\">Tag</Checkbox>\r\n          </Col>\r\n        </Row>\r\n      </Checkbox.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\nElements.propTypes = {\r\n  elements: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    elements: state.guide.elements,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setComponents: elements => {\r\n      dispatch(setComponents(elements));\r\n    },\r\n  };\r\n};\r\n\r\nconst ElementsContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Elements);\r\n\r\nexport default ElementsContainer;\r\n","export const WARNINGS = Object.freeze({\r\n  INPUT_NAME: 'Type a name for your Guide',\r\n  NO_FONT: \"You haven't selected any font yet\",\r\n});\r\n\r\nexport const SECTIONS = Object.freeze({\r\n  TYPOGRAPHY: 'Typography',\r\n  COLORS: 'Colors',\r\n  ELEMENTS: 'Elements',\r\n});\r\n","import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    @import url('https://fonts.googleapis.com/css?family=${props =>\r\n      props.primaryFont || 'Roboto'}|${props =>\r\n  props.secondaryFont || 'Playfair Display'}');\r\n    \r\n    .primary-font {\r\n        font-family: \"${props => props.primaryFont || 'Roboto'}\";\r\n    }\r\n\r\n    .secondary-font {\r\n        font-family: \"${props => props.secondaryFont || 'Playfair Display'}\";\r\n    }\r\n\r\n    .ant-btn-primary {\r\n        background-color: ${props => props.primaryColor || ''};\r\n        border-color: ${props => props.primaryColor || ''};\r\n    }\r\n\r\n    .ant-btn {\r\n        margin: 0 15px 0 0;\r\n    }\r\n\r\n    .ant-btn:hover, .ant-btn:focus {\r\n        color: ${props => props.primaryColor || ''};\r\n        background-color: #fff;\r\n        border-color: ${props => props.primaryColor || ''};\r\n    }\r\n\r\n    .ant-btn-link {\r\n        color: ${props => props.primaryColor || ''};\r\n    }\r\n\r\n    .ant-col .ant-tag:first-child {\r\n        background-color:  ${props => props.primaryColor || ''};\r\n    }\r\n\r\n    .ant-col .ant-tag:nth-child(2) {\r\n        background-color:  ${props => props.secondaryColor || ''};\r\n    }\r\n\r\n    .ant-tabs-nav .ant-tabs-tab-active,\r\n    .ant-tabs-nav .ant-tabs-tab:hover {\r\n        color:  ${props => props.primaryColor || ''};\r\n    }\r\n\r\n    .ant-tabs-ink-bar,\r\n    .ant-switch-checked,\r\n    .ant-checkbox-checked .ant-checkbox-inner,\r\n    .ant-radio-inner::after {\r\n        background-color:  ${props => props.primaryColor || ''};\r\n    }\r\n\r\n    .ant-input:focus,\r\n    .ant-checkbox-checked .ant-checkbox-inner,\r\n    .ant-radio-wrapper:hover .ant-radio,\r\n    .ant-radio-checked::after,\r\n    .ant-radio-checked .ant-radio-inner {\r\n        border-color:  ${props => props.primaryColor || ''};\r\n    }\r\n\r\n    .ant-input:focus {\r\n        box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);\r\n    }\r\n`;\r\n\r\nexport const ResultTitle = styled.div`\r\n  width: 100%;\r\n  background: ${props => props.primaryColor || '#1A535C'};\r\n\r\n  input {\r\n    padding: 60px;\r\n    width: 100%;\r\n    font-size: 36px;\r\n    color: #fff;\r\n    border: 0;\r\n    background: none;\r\n    outline: none;\r\n\r\n    &::placeholder {\r\n      color: white;\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FontSample = styled.h1`\r\n  margin: 0;\r\n  padding: 0;\r\n  font-size: 150px;\r\n  line-height: 0.8;\r\n\r\n  small {\r\n    margin-top: 15px;\r\n    display: block;\r\n    font-size: 14px;\r\n    color: #666666;\r\n    line-height: 1.5;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'PingFang SC',\r\n      'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial,\r\n      sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\r\n  }\r\n`;\r\n\r\nexport const ColorCard = styled.div`\r\n  margin: 0 0 15px 0;\r\n  height: 100px;\r\n  border-radius: 5px;\r\n  background: ${props => props.background || '#eeeeee'};\r\n`;\r\n\r\nexport const BottomBar = styled.div`\r\n  padding: 0 0 25px;\r\n  overflow: hidden;\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  bottom: 0;\r\n  background: rgba(255, 255, 255, 0.8);\r\n\r\n  button {\r\n    float: right;\r\n  }\r\n\r\n  .ant-divider-horizontal {\r\n    margin: 1px 0 25px 0;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport {\r\n  Typography,\r\n  Col,\r\n  Empty,\r\n  Button,\r\n  Card,\r\n  Tag,\r\n  Tabs,\r\n  Input,\r\n  Checkbox,\r\n  Radio,\r\n  Switch,\r\n} from 'antd';\r\nconst { Title, Text } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\nexport const ElementSelected = ({ element }) => {\r\n  switch (element) {\r\n    case 'Button':\r\n      return (\r\n        <>\r\n          <Col span={6}>\r\n            <Title level={4}>{element}</Title>\r\n          </Col>\r\n          <Col span={18}>\r\n            <Button type=\"primary\">Primary</Button>\r\n            <Button>Default</Button>\r\n            <Button type=\"dashed\">Dashed</Button>\r\n            <Button type=\"danger\">Danger</Button>\r\n            <Button type=\"link\">Link</Button>\r\n          </Col>\r\n        </>\r\n      );\r\n    case 'Card':\r\n      return (\r\n        <>\r\n          <Col span={6}>\r\n            <Title level={4}>{element}</Title>\r\n          </Col>\r\n          <Col span={18}>\r\n            <Card title=\"Card title\" style={{ width: 300 }}>\r\n              <p>Card content</p>\r\n              <p>Card content</p>\r\n              <p>Card content</p>\r\n            </Card>\r\n          </Col>\r\n        </>\r\n      );\r\n    case 'Tag':\r\n      return (\r\n        <>\r\n          <Col span={6}>\r\n            <Title level={4}>{element}</Title>\r\n          </Col>\r\n          <Col span={18}>\r\n            <Tag closable onClose={() => {}}>\r\n              Tag 1\r\n            </Tag>\r\n            <Tag closable onClose={() => {}}>\r\n              Tag 2\r\n            </Tag>\r\n            <Tag closable onClose={() => {}}>\r\n              Tag 3\r\n            </Tag>\r\n            <Tag closable onClose={() => {}} color=\"red\">\r\n              Tag 4\r\n            </Tag>\r\n            <Tag closable onClose={() => {}} color=\"orange\">\r\n              Tag 5\r\n            </Tag>\r\n          </Col>\r\n        </>\r\n      );\r\n    case 'Tabs':\r\n      return (\r\n        <>\r\n          <Col span={6}>\r\n            <Title level={4}>{element}</Title>\r\n          </Col>\r\n          <Col span={18}>\r\n            <Tabs defaultActiveKey=\"1\" onChange={() => {}}>\r\n              <TabPane tab=\"Tab 1\" key=\"1\">\r\n                Content of Tab Pane 1\r\n              </TabPane>\r\n              <TabPane tab=\"Tab 2\" key=\"2\">\r\n                Content of Tab Pane 2\r\n              </TabPane>\r\n              <TabPane tab=\"Tab 3\" key=\"3\">\r\n                Content of Tab Pane 3\r\n              </TabPane>\r\n            </Tabs>\r\n          </Col>\r\n        </>\r\n      );\r\n    case 'Form':\r\n      return (\r\n        <>\r\n          <Col span={6}>\r\n            <Title level={4}>{element}</Title>\r\n          </Col>\r\n          <Col span={18}>\r\n            <Text style={{ display: 'block' }}>Input</Text>\r\n            <Input placeholder=\"I'm an input\" />\r\n            <Text style={{ display: 'block', margin: '25px 0 10px 0' }}>\r\n              Checkbox\r\n            </Text>\r\n            <Checkbox>A</Checkbox>\r\n            <Checkbox>B</Checkbox>\r\n            <Text style={{ display: 'block', margin: '25px 0 10px 0' }}>\r\n              Radio\r\n            </Text>\r\n            <Radio.Group>\r\n              <Radio value={1}>A</Radio>\r\n              <Radio value={2}>B</Radio>\r\n              <Radio value={3}>C</Radio>\r\n              <Radio value={4}>D</Radio>\r\n            </Radio.Group>\r\n            <Text style={{ display: 'block', margin: '25px 0 10px 0' }}>\r\n              Switch\r\n            </Text>\r\n            <Switch defaultChecked />\r\n          </Col>\r\n        </>\r\n      );\r\n    default:\r\n      return <Empty description=\"You haven't selected any element yet\" />;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { BottomBar } from './ResultStyles';\r\nimport CONSTANTS from '../../../constants';\r\n\r\nimport { Divider, Button } from 'antd';\r\n\r\nconst ResultBottom = props => {\r\n  const { name, colors, typography, elements, isSaving } = props.payload;\r\n  const payload = {\r\n    name,\r\n    colors,\r\n    typography,\r\n    elements,\r\n  };\r\n\r\n  return (\r\n    <BottomBar>\r\n      <Divider />\r\n      {props.id.length !== 0 && (\r\n        <span>\r\n          {CONSTANTS.RESULT_URL}\r\n          {props.id}\r\n        </span>\r\n      )}\r\n      <Button onClick={() => props.save(payload)} loading={isSaving}>\r\n        Save\r\n      </Button>\r\n    </BottomBar>\r\n  );\r\n};\r\n\r\nexport default ResultBottom;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { saveGuide, setName, getGuideFromDB } from '../../../redux/guide';\r\nimport { WARNINGS, SECTIONS } from './resultConstants';\r\n\r\nimport {\r\n  GlobalStyles,\r\n  ResultTitle,\r\n  FontSample,\r\n  ColorCard,\r\n} from './ResultStyles';\r\nimport { ElementSelected } from './ElementSelected';\r\nimport ResultBottom from './ResultBottom';\r\n\r\nimport { Typography, Row, Col, Empty } from 'antd';\r\nconst { Title } = Typography;\r\n\r\nconst Result = props => {\r\n  const { match } = props;\r\n  const { getGuideFromDB } = props;\r\n\r\n  const { TYPOGRAPHY, COLORS, ELEMENTS } = SECTIONS;\r\n\r\n  useEffect(() => {\r\n    if (typeof match.params.id !== 'undefined') {\r\n      getGuideFromDB(match.params.id);\r\n    }\r\n  }, [match.params.id, getGuideFromDB]);\r\n\r\n  const { id, name, colors, typography, elements } = props;\r\n\r\n  const nameHandler = e => {\r\n    props.setName(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyles\r\n        primaryColor={colors['first'].hex}\r\n        secondaryColor={colors['second'].hex}\r\n        primaryFont={typography[0]}\r\n        secondaryFont={typography[1]}\r\n      />\r\n      <ResultTitle primaryColor={colors['first'].hex}>\r\n        <input\r\n          value={name}\r\n          className=\"primary-font\"\r\n          onChange={nameHandler}\r\n          placeholder={WARNINGS.INPUT_NAME}\r\n        />\r\n      </ResultTitle>\r\n      <Title style={{ marginTop: '50px' }}>{TYPOGRAPHY}</Title>\r\n      {typography.length > 0 ? (\r\n        typography.map((font, index) => {\r\n          return (\r\n            <div\r\n              className={index === 0 ? 'primary-font' : 'secondary-font'}\r\n              key={index}\r\n            >\r\n              <Row gutter={16} style={{ marginTop: '50px' }}>\r\n                <Col span={8}>\r\n                  <FontSample>\r\n                    Aa <small>{font}</small>\r\n                  </FontSample>\r\n                </Col>\r\n                <Col span={16}>\r\n                  <Title>h1. {font}</Title>\r\n                  <Title level={2}>h2. {font}</Title>\r\n                  <Title level={3}>h3. {font}</Title>\r\n                  <Title level={4}>h4. {font}</Title>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <Empty description={WARNINGS.NO_FONT} />\r\n      )}\r\n      <Title style={{ marginTop: '50px' }}>{COLORS}</Title>\r\n      <Row gutter={16} style={{ marginTop: '50px' }}>\r\n        {Object.entries(colors).map(color => {\r\n          return (\r\n            <Col span={6} key={color[0]}>\r\n              <ColorCard background={color[1].hex}></ColorCard>\r\n              <p>{color[1].hex}</p>\r\n              <p>\r\n                rgb:{' '}\r\n                {`${color[1].rgba.r}, ${color[1].rgba.g}, ${color[1].rgba.b}`}\r\n              </p>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n      {elements.length > 0 && (\r\n        <Title style={{ marginTop: '50px' }}>{ELEMENTS}</Title>\r\n      )}\r\n      {elements.map(element => {\r\n        return (\r\n          <Row gutter={16} key={element} style={{ marginBottom: '25px' }}>\r\n            <ElementSelected element={element} />\r\n          </Row>\r\n        );\r\n      })}\r\n      <ResultBottom id={id} save={props.saveGuide} payload={props} />\r\n    </>\r\n  );\r\n};\r\n\r\nResult.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  colors: PropTypes.object,\r\n  fontList: PropTypes.arrayOf(PropTypes.object),\r\n  typography: PropTypes.arrayOf(PropTypes.string),\r\n  isSaving: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    id: state.guide.id,\r\n    name: state.guide.name,\r\n    colors: state.guide.colors,\r\n    typography: state.guide.typography,\r\n    elements: state.guide.elements,\r\n    isSaving: state.guide.isSaving,\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = dispatch => {\r\n  return {\r\n    saveGuide: payload => {\r\n      dispatch(saveGuide(payload));\r\n    },\r\n    setName: name => {\r\n      dispatch(setName(name));\r\n    },\r\n    getGuideFromDB: id => {\r\n      dispatch(getGuideFromDB(id));\r\n    },\r\n  };\r\n};\r\n\r\nconst ResultContainer = connect(mapStateToProps, mapDispathToProps)(Result);\r\n\r\nexport default ResultContainer;\r\n","import React from 'react';\r\n\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport TypeFaceContainer from './components/style-guide/Typeface/Typeface';\r\nimport PaletteContainer from './components/style-guide/Palette';\r\nimport ElementsContainer from './components/style-guide/Elements';\r\nimport ResultContainer from './components/style-guide/Result/Result';\r\n\r\nexport default function Routing() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={TypeFaceContainer} />\r\n      <Route path=\"/typeface\" component={TypeFaceContainer} />\r\n      <Route path=\"/palette\" component={PaletteContainer} />\r\n      <Route path=\"/elements\" component={ElementsContainer} />\r\n      <Route path={['/result/:id', '/result/']} component={ResultContainer} />\r\n    </Switch>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { Menu, Icon } from 'antd';\r\nconst { SubMenu } = Menu;\r\n\r\nconst GuideMenu = props => {\r\n  return (\r\n    <Menu\r\n      mode=\"inline\"\r\n      defaultSelectedKeys={['1']}\r\n      defaultOpenKeys={['sub1']}\r\n      style={{ height: '100%' }}\r\n    >\r\n      <SubMenu\r\n        key=\"sub1\"\r\n        title={\r\n          <span>\r\n            <Icon type=\"font-size\" />\r\n            Typography\r\n          </span>\r\n        }\r\n      >\r\n        <Menu.Item key=\"1\">\r\n          <NavLink to=\"/typeface\">Typeface</NavLink>\r\n        </Menu.Item>\r\n      </SubMenu>\r\n      <SubMenu\r\n        key=\"sub2\"\r\n        title={\r\n          <span>\r\n            <Icon type=\"bg-colors\" />\r\n            Style\r\n          </span>\r\n        }\r\n      >\r\n        <Menu.Item key=\"2\">\r\n          <NavLink to=\"/palette\">Color palette</NavLink>\r\n        </Menu.Item>\r\n      </SubMenu>\r\n      <SubMenu\r\n        key=\"sub3\"\r\n        title={\r\n          <span>\r\n            <Icon type=\"layout\" />\r\n            Components\r\n          </span>\r\n        }\r\n      >\r\n        <Menu.Item key=\"3\">\r\n          <NavLink to=\"/elements\">Elements</NavLink>\r\n        </Menu.Item>\r\n      </SubMenu>\r\n      <Menu.Item key=\"4\">\r\n        <NavLink to=\"/result/\">\r\n          <span>\r\n            <Icon type=\"block\" />\r\n            Result\r\n          </span>\r\n        </NavLink>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default GuideMenu;\r\n","import React from 'react';\r\nimport { PageHeader } from 'antd';\r\n\r\nimport { Icon } from 'antd';\r\n\r\n\r\nconst GuideHeader = () => {\r\n    return (\r\n        <PageHeader title={<Icon type=\"block\" />} subTitle=\"Style Guide Explorations\"  style={{margin: '0 0 20px 0', border: '1px solid rgb(235, 237, 240)'}} />\r\n    );\r\n};\r\n\r\nexport default GuideHeader;","import React from 'react';\r\n\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { Layout } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport reducers from './redux/reducers';\r\n\r\nimport Routing from './Routing';\r\nimport GuideMenu from './components/pages/menu';\r\nimport GuideHeader from './components/pages/header';\r\n\r\nconst { Content, Sider } = Layout;\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nvar store = createStore(reducers, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div data-test=\"component-app\">\r\n        <Layout style={{ background: '#ffffff' }}>\r\n          <Content\r\n            style={{ padding: '0 50px', margin: '60px auto', width: '1024px' }}\r\n          >\r\n            <GuideHeader />\r\n            <Layout\r\n              style={{\r\n                padding: '24px 0',\r\n                background: '#fff',\r\n                border: '1px solid rgb(235, 237, 240)',\r\n              }}\r\n            >\r\n              <Sider width={200} style={{ background: '#fff' }}>\r\n                <GuideMenu />\r\n              </Sider>\r\n              <Content style={{ padding: '0 24px', minHeight: 280 }}>\r\n                <Routing />\r\n              </Content>\r\n            </Layout>\r\n          </Content>\r\n        </Layout>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './base.css';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}